<template>
  <div>
    <el-button type="primary" @click="addDialog">添加${tableComment}</el-button>
    <pure-table
      locale="zhCn"
      :data="dataList"
      :columns="columns"
      :pagination="pagination"
    >
      <template #operation="{ row }">
        <el-button link type="primary" size="small" @click="jump(row)"
          >查看</el-button
        >

        <el-button link type="primary" size="small" @click="deleteClick(row)">
          删除
        </el-button>
      </template>
    </pure-table>

    <el-dialog v-model="dialogForm" title="添加${tableComment}" width="800">
      <el-form :model="form">
        <% for(var i = 0; i < configList.~size; i++) { %>
        <% if(!configList[i].isLogicDelete && !configList[i].isAutoInsert && !configList[i].isAutoUpdate) { %>
        <el-form-item label="${configList[i].fieldComment}" :label-width="formLabelWidth">
          <el-input
            v-model="form.${configList[i].fieldNameCamelCase}"
            autocomplete="off"
            placeholder="请输入${configList[i].fieldComment}"
          />
        </el-form-item>
        <% } %>
      	<% } %>
      </el-form>
      <template #footer>
        <div class="dialog-footer">
          <el-button @click="dialogForm = false">取消</el-button>
          <el-button type="primary" @click="submit"> 确定 </el-button>
        </div>
      </template>
    </el-dialog>
  </div>
</template>

<script setup lang="ts">
import { storageLocal } from "@pureadmin/utils";
import {
  addDialog,
  closeDialog,
  updateDialog,
  closeAllDialog
} from "@/components/ReDialog";
import { PureTable } from "@pureadmin/table";
import { ${classNameCamelCase}Page, ${classNameCamelCase}Add, ${classNameCamelCase}Update, ${classNameCamelCase}Delete } from "@/api/${bizName}Api";
import { ElMessageBox } from "element-plus";
defineOptions({
  name: "${bizName}"
});
const dialogForm = ref(false);

const formLabelWidth = "140px";

const form = reactive({
  projectNo: "", //项目编号
  projectName: "", //项目名称
  projectDesc:
    "按产品需求文档、产品功能清单等输入物进行测试用例开发，并进行3轮测试实施", //项目简介
  chargeUserId: "", //负责人id
  partUserList: [], //参与人id列表
  deviceList: [], //设备列表
  projectDate: [], //项目日期
  startDate: "", //项目开始日期
  endDate: "" //项目结束日期
});

const pagination = reactive<any>({
  pageSize: 10,
  currentPage: 1,
  pageSizes: [10, 15, 20],
  total: 0,
  align: "right",
  background: true,
  size: "default"
});

const showDialog = async () => {
  dialogForm.value = true;
};

const submit = async () => {
  const result = await ${classNameCamelCase}Add(form);
  if (result) {
    init(pagination.currentPage, pagination.pageSize);
    dialogForm.value = false;
  }
};

/** -------------- table --------------- */
const dataList = ref<any>([]);
const columns = ref<any>([
   <% for(var i = 0; i < configList.~size; i++) { %>
   <% if(!configList[i].isLogicDelete && !configList[i].isAutoInsert && !configList[i].isAutoUpdate) { %>
  {
    label: "${configList[i].fieldComment}",
    prop: "${configList[i].fieldNameCamelCase}"
  },
   <% } %>
   <% } %>
  {
    label: "操作",
    fixed: "right",
    slot: "operation"
  }
]);

const deleteClick = async row => {
  ElMessageBox.confirm("确定要删除所选数据吗？", "提示", {
    type: "warning"
  }).then(async () => {
    const result = await ${classNameCamelCase}Delete(row.id);
    if (result) {
      init(pagination.currentPage, pagination.pageSize);
    }
  });
};

const jump = row => {
  console.log(
    "%crow===>>>: ",
    "color: MidnightBlue; background: Aquamarine; font-size: 20px;",
    row
  );
  router.push("/welcome/project/projectDetail/dbc");
};

const init = async (page: number, size: number) => {
  const result = await ${classNameCamelCase}Page(page, size);
  if (result) {
    dataList.value = result.records;
    pagination.total = result.total;
  }
};

onMounted(() => {
  init(1, 10);
});

</script>

<style lang="scss" scoped></style>
